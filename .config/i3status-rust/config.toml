[theme]
file = "wpg.toml"

[icons]
name = "awesome5"
[icons.overrides]
weather_sun = "\ufa98"

[[block]]
block = "focused_window"
max_width = 21

[[block]]
block = "music"
# buttons = ["play", "next"]
dynamic_width = true
# format = "{player}({avail}) {combo}"
marquee_interval = 5
marquee_speed = 0.2
# kdeconnect with low priority
on_click = 'playerctl play-pause -i vlc -p "%any,$(playerctl -l | grep kdeconnect.mpris | tr \\n ,)"'
on_collapsed_click = "spotify"

# [[block]]
# block = "docker"
# format = "{running}/{total}"
# interval = 2

[[block]]
block = "cpu"
interval = 1
on_click = "~/.config/i3status-rust/toggle-htop.py"

[[block]]
alert = 10.0
block = "disk_space"
format = "{available*_B;T}"
info_type = "available"
interval = 20
warning = 20.0

[[block]]
block = "custom"
command = "~/.config/i3status-rust/psi.py io"
hide_when_empty = true
interval = 1
json = true
on_click = "~/.config/i3status-rust/toggle-htop.py"

[[block]]
block = "memory"
display_type = "memory"
format_mem = "{mem_used_percents:1}"
format_swap = "{swap_used_percents:1}"

[[block]]
block = "custom"
command = "~/.config/i3status-rust/psi.py memory"
hide_when_empty = true
interval = 1
json = true
on_click = "~/.config/i3status-rust/toggle-htop.py"

# [[block]]
# block = "custom"
# command = "pacmd list-sinks | sed '/*index:/{N;s/.*\\n//;s/\\W*name:.*\\.\\(.*\\)>/\\1/;p};d;'"
# interval = "once"
# on_click = "pactl set-default-sink $(pactl list sinks short | grep RUNNING | head -n1 | cut -f2) && pacmd list-sinks | sed '/*index:/{N;s/.*\\n//;s/\\W*name:.*\\.\\(.*\\)>/\\1/;p};d;'"

[[block]]
block = "sound"
# set default device to current running sink, so the statusbar shows the volume of the current running sink
# on_click = "pactlset-default-sink$(pactllistsinksshort|grepRUNNING|head-n1|cut-f2);~/.config/i3status-rust/toggle-pavucontrol.py"
on_click = "~/.config/i3status-rust/toggle-pavucontrol.py"
show_volume_when_muted = true

[[block]]
block = "sound"
device_kind = "source"
format = ""
on_click = "~/.config/i3/mute-mics.zsh"
#on_click = "pactl set-source-mute 1 toggle"

# [[block]]
# block = "networkmanager"
# device_format = "{icon}{ap}"

[[block]]
block = "net"
format = "{speed_up:1}{speed_down:1}"
format_alt = ""
on_click = "~/.config/i3status-rust/toggle-net.py"

[[block]]
block = "backlight"

# [[block]]
# block = "hueshift"
# click_temp = 4000
# hue_shifter = "redshift"
# step = 100

[[block]]
block = "battery"
device = "DisplayDevice"
driver = "upower"
#format = "{percentage}% {power}W {time}"
#full_format = "{percentage}% {power}W"

# [[block]]
# block = "keyboard_layout"
# driver = "setxkbmap"
# interval = 1

[[block]]
block = "ibus"
[block.mappings]
"anthy" = "jp"
"pinyin" = "cn"
"xkb:de::deu" = "de"
"xkb:de:neo:deu" = "neo"
"xkb:us::eng" = "en"

[[block]]
block = "bluetooth"
format = "{label}"
hide_disconnected = true
on_click = "~/.config/i3status-rust/toggle-blueberry.py"
# mouse
mac = "DE:AD:FA:CE:CA:FE"

[[block]]
block = "bluetooth"
format = "{label}"
hide_disconnected = true
on_click = "~/.config/i3status-rust/toggle-blueberry.py"
# headset
mac = "DE:AD:FA:CE:CA:FE"

# [[block]]
# block = "kdeconnect"
# format = "{name} {notif_icon}{notif_count}"
# on_click = "~/.config/i3status-rust/toggle-kdeconnect.py"

# needs dunst >= v1.6.0
[[block]]
block = "notify"

[[block]]
# {location} {wind}m/s {direction} {wind_kmh}km/h {humidity}%"
autolocate = true
block = "weather"
format = "{temp}"
on_click = "firefox https://openweathermap.org/"
service = {name = "openweathermap", api_key = "YOUR API KEY", units = "metric"}

[[block]]
block = "time"
format = "%a %d-%m %H:%M:%S"
interval = 1
on_click = "~/.config/i3status-rust/toggle-calendar.py"

[[block]]
block = "pacman"
format = "{pacman}+{aur}"
hide_when_uptodate = true
interval = 3600
on_click = "gnome-terminal"
# If a linux update is availble, but no ZFS package, it won't be possible to
# actually perform a system upgrade, so we show a warning.
warning_updates_regex = "(linux |linux-lts|linux-zen)"
# If ZFS is available, we know that we can and should do an upgrade, so we show
# the status as critical.
critical_updates_regex = "(zfs |zfs-lts)"

aur_command = "yay -Qua"

# [[block]]
# block = "speedtest"
# bytes = false
# speed_digits = 1
# interval = 1800

[[block]]
block = "temperature"
collapsed = true
format = "{min}{average}{max}"
interval = 5

# [[block]]
# block = "uptime"

#  [[block]]
# block = "xrandr"
# icons = true
# resolution = false
# interval = 5
